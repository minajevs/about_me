import { PersonalQuery } from 'autogenerated/graphql-types'
import { pipe } from 'fp-ts/lib/function'
import { fold, foldMap, getOrElse } from 'fp-ts/lib/Option'
import { graphql, useStaticQuery } from 'gatsby'
import { MDXRenderer } from 'gatsby-plugin-mdx'
import React, { useMemo } from 'react'
import { foldNullables, foldNullablesTuple } from 'src/utils/functional'
import { ret } from 'src/utils/pointfree'
import { isNullOrUndefined } from 'src/utils/predicates'

import styles from './personal.module.scss'

const query = graphql`
  query Personal {
    mdx(slug: {eq: "personal"}) {
      frontmatter {
        avatarUrl
        avatarAlt
        title
      }
      body
    }
  }
`

export const Personal = () => {
  const { mdx } = useStaticQuery<PersonalQuery>(query)

  const title = mdx?.frontmatter?.title
  const body = mdx?.body ?? ''

  const avatar = foldNullables(
    mdx?.frontmatter,
    ret(null),
    ({ avatarAlt, avatarUrl }) => <img src={avatarUrl} alt={avatarAlt} />
  )

  return (
    <div className={styles.personal}>
      <h1>{title}</h1>
      <MDXRenderer>{body}</MDXRenderer>
    </div>
  )
}

export default Personal